---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: readarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: readarr
  template:
    metadata:
      labels:
        app: readarr
    spec:
      containers:
        - name: readarr
          image: lscr.io/linuxserver/readarr:develop
          env:
            - name: PUID
              value: '0'
            - name: PGID
              value: '0'
            - name: TZ
              value: Etc/UTC
          ports:
            - containerPort: 8787
              name: readarr
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          securityContext:
            allowPrivilegeEscalation: true
            runAsNonRoot: false
          volumeMounts:
            - name: books
              mountPath: /books
            - name: readarr-config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
      volumes:
        - name: readarr-config
          persistentVolumeClaim:
            claimName: {{ printf "%s-config" .Release.Name }}
        - name: downloads
          persistentVolumeClaim:
            claimName: {{ default (printf "%s-downloads" .Release.Name) .Values.storage.downloads.existingClaimName }}
        - name: books
          persistentVolumeClaim:
            claimName: {{ default (printf "%s-books" .Release.Name) .Values.storage.books.existingClaimName }}
